source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
matrix(1:10)
matrix(1:10, ncol=2)
matrix(1:10, ncol=2)*1:5
matrix(1:10, ncol=2)*c(0,1,0,1,0)
matrix(1:10, ncol=2)
matrix(1:10, ncol=2)*c(0,1,0,1,0)
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
head(data)
source("./satf_load.R")
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1+c2, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
data.nyes
source("./satf_load.R")
satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
library(plyr)
satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
rm(split_indices)
rm(plyr)
rm("package:plyr")
rm("package::plyr")
rm("packages::plyr")
rm(plyr)
detach("package:plyr", unload=TRUE)
library(plyr)
satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
source("./satf_load.R")
satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
source("./satf_load.R")
fn.bias <- function(t) t*0 #SATF(t, asymptote=1, invrate=1, intercept=.4)
fn.satf1 <- function(t) SATF(t, asymptote=3, invrate=1, intercept=.4)
fn.satf2 <- function(t) SATF(t, asymptote=2, invrate=1, intercept=.4)
sim.n <- 10^3
time = seq(-.5,5,.5)
data1 <- satf_generate(criterion=fn.bias, dprime=fn.satf1, time=time, n=sim.n, rho=0, label="condition1")
data2 <- satf_generate(criterion=fn.bias, dprime=fn.satf2, time=time, n=sim.n, rho=0, label="condition2")
data <- rbind(data1, data2)
data <- data1
data.nyes <- satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
data.dprime <- satf_aggregate_dprime(data.nyes, id=c('condition', 'interval'), signal='signal',
dv=c('n.responses.yes', 'n.responses'))
with(data, plot(time, criterion))
with(data.dprime, plot(time, c + dprime/2))
setwd("~/Code/r-forge/satf/repos/satf/test")
source("./satf_load.R")
fn.bias <- function(t) t*0 #SATF(t, asymptote=1, invrate=1, intercept=.4)
fn.satf1 <- function(t) SATF(t, asymptote=3, invrate=1, intercept=.4)
fn.satf2 <- function(t) SATF(t, asymptote=2, invrate=1, intercept=.4)
sim.n <- 10^3
time = seq(-.5,5,.5)
data1 <- satf_generate(criterion=fn.bias, dprime=fn.satf1, time=time, n=sim.n, rho=0, label="condition1")
data2 <- satf_generate(criterion=fn.bias, dprime=fn.satf2, time=time, n=sim.n, rho=0, label="condition2")
data <- rbind(data1, data2)
data <- data1
data.nyes <- satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
data.dprime <- satf_aggregate_dprime(data.nyes, id=c('condition', 'interval'), signal='signal',
dv=c('n.responses.yes', 'n.responses'))
with(data, plot(time, criterion))
with(data.dprime, plot(time, c + dprime/2))
library(ddply)
library(plyr)
data.nyes <- satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
data.dprime <- satf_aggregate_dprime(data.nyes, id=c('condition', 'interval'), signal='signal',
dv=c('n.responses.yes', 'n.responses'))
data.nyes <- satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
data.dprime <- satf_aggregate_dprime(data.nyes, id=c('condition', 'interval'), signal='signal',
dv=c('n.responses.yes', 'n.responses'))
with(data, plot(time, criterion))
with(data.dprime, plot(time, c + dprime/2))
x11()
with(data.dprime, plot(time, c + dprime/2))
(p1.nyes <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, #trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.raw <- satf(dv=c(response=~response), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLik"))
p1.raw
log(.0005)
log(.0001)
log(1)
log(.5)
Rcpp::sourceCpp('~/CodeSATF/src/rcpp_exports.cpp')
source("./satf_load.R")
(p1.nyes <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, #trial.id=~trial.id,
data=data.nyes, metric="logLik"))
(p1.raw <- satf(dv=c(response=~response), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLik"))
date()
(p1.raw <- satf(dv=c(response=~response), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLik"))
date()
date()
(p1.raw <- satf(dv=c(response=~response), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time#, trial.id=~trial.id,
data=data, metric="logLik"))
date()
date()
(p1.raw <- satf(dv=c(response=~response), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time,# trial.id=~trial.id,
data=data, metric="logLik"))
date()
(p1.raw <- satf(dv=c(response=~response), signal=~signal,
start     = p1.nyes$par,
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time,# trial.id=~trial.id,
data=data, metric="logLik"))
date()
p1.nyes$par
start <- p1.nyes$par
start['asymptote'] <- 1
date()
(p1.raw <- satf(dv=c(response=~response), signal=~signal,
start     = ,
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time,# trial.id=~trial.id,
data=data, metric="logLik"))
date()
date()
(p1.raw <- satf(dv=c(response=~response), signal=~signal,
start     = start,
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time,# trial.id=~trial.id,
data=data, metric="logLik"))
date()
a <- c(1)
names(a) <- c('a','b')
Rcpp::sourceCpp('~/CodeSATF/src/rcpp_exports.cpp')
Rcpp::sourceCpp('~/CodeSATF/src/rcpp_exports.cpp')
Rcpp::sourceCpp('~/Code/r-forge/satf/repos/satf/src/satf.cpp')
Rcpp::sourceCpp('~/Code/r-forge/satf/repos/satf/src/satf.cpp')
Rcpp::sourceCpp('~/Code/r-forge/satf/repos/satf/src/satf.cpp')
Rcpp::sourceCpp('~/Code/r-forge/satf/repos/satf/src/satf.cpp')
Rcpp::sourceCpp('~/Code/r-forge/satf/repos/satf/src/satf.cpp')
Rcpp::sourceCpp('~/Code/r-forge/satf/repos/satf/src/satf.cpp')
Rcpp::sourceCpp('~/CodeSATF/src/rcpp_exports.cpp')
source("./satf_load.R")
source("./satf_load.R")
(p1.nyes <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, #trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.nyes <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, #trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
source("./satf_load.R")
(p1.nyes <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, #trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.nyes <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, #trial.id=~trial.id,
data=data.nyes, metric="logLik"))
source("./satf_load.R")
(p1.nyes <- satf(dv=c(n.responses.yes=~n.responses.yes, n.responses=~n.responses), signal=~signal,
start     = c(asymptote=2, invrate=1, intercept=.4),
contrasts = c(asymptote=~1, invrate=~1, intercept=~1),
bias = c(bias.min=~1, bias.max=~1, bias.intercept=~1, bias.invrate=~1),
constraints=list(), time=~time, #trial.id=~trial.id,
data=data.nyes, metric="logLik"))
with(data.dprime, plot(time, c + dprime/2))
x11()
with(data.dprime, plot(time, c + dprime/2))
fn.bias <- function(t) t*.1 #SATF(t, asymptote=1, invrate=1, intercept=.4)
data1 <- satf_generate(criterion=fn.bias, dprime=fn.satf1, time=time, n=sim.n, rho=0, label="condition1")
data2 <- satf_generate(criterion=fn.bias, dprime=fn.satf2, time=time, n=sim.n, rho=0, label="condition2")
data <- rbind(data1, data2)
data <- data1
data.nyes <- satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
data.dprime <- satf_aggregate_dprime(data.nyes, id=c('condition', 'interval'), signal='signal',
dv=c('n.responses.yes', 'n.responses'))
q()
install.packages("NLOpt")
install.packages("nloptr")
library(nloptr)
nloptr(1, function(x) {print(x); -x^2}, opts=list(algorithm="NLOPT_LN_SBPLX"))
nloptr(1, function(x) {print(x); x^2}, opts=list(algorithm="NLOPT_LN_SBPLX"))
nloptr(1, function(x) {print(x); x^2}, opts=list(algorithm="NLOPT_LN_SBPLX", maxeval=10^2))
nloptr(1, function(x) {print(x); x^2}, opts=list(algorithm="NLOPT_LN_SBPLX", maxeval=10^3))
nloptr(c(1,1), function(x) {print(x); sum(x^2) }, opts=list(algorithm="NLOPT_LN_SBPLX", maxeval=10^3))
nloptr(c(1,1), function(x) {print(x); sum(x^2) }, opts=list(algorithm="NLOPT_LN_SBPLX", maxeval=10^6))
nloptr
head(nloptr)
source("~/CodeSATF/test/satf_load.R")
library(sets)
library(plyr)
library(Rcpp)
library(nloptr)
source("~/CodeSATF/R/satf_misc.R")
source("~/CodeSATF/R/satf_aggregate.R")
source("~/CodeSATF/R/satf_params.R")
source("~/CodeSATF/R/satf_generate.R")
source("~/CodeSATF/R/satf_resample.R")
source("~/CodeSATF/R/satf.R")
Rcpp::sourceCpp("~/CodeSATF/src/satf_load.tmpcpp", rebuild=T)
source("~/CodeSATF/test/satf_load.R")
source("~/CodeSATF/test/satf_load.R")
source("~/CodeSATF/test/satf_load.R")
fn.bias <- function(t) t*0 # SATF(t, asymptote=1, invrate=1, intercept=.4)
fn.satf1 <- function(t) SATF(t, asymptote=3, invrate=1, intercept=.4)
fn.satf2 <- function(t) SATF(t, asymptote=1, invrate=.5, intercept=.4)
sim.n <- 100
time = seq(-.2,4.6,.4); rho = .85;
data1 <- satf_generate(criterion=fn.bias, dprime=fn.satf1, time=time, n=sim.n, rho=rho, label="condition1")
data2 <- satf_generate(criterion=fn.bias, dprime=fn.satf2, time=time, n=sim.n, rho=rho, label="condition2")
data3 <- satf_generate(criterion=fn.bias, dprime=fn.satf2, time=time, n=sim.n, rho=rho, label="condition3")
data <- rbind(data1, data2, data3)
data$c1 <- ifelse(data$condition=="condition1", 1, 0)
data$c2 <- ifelse(data$condition=="condition2", 1, 0)
data$c3 <- ifelse(data$condition=="condition3", 1, 0)
data.nyes <- satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
data.dprime <- satf_aggregate_dprime(data.nyes, id=c('condition', 'interval'), signal='signal',
dv=c('n.responses.yes', 'n.responses'))
ggplot(data.dprime, aes(x=time, y=dprime, color=condition))+geom_point()
ggplot(data.nyes, aes(x=time, y=n.responses.yes/n.responses, color=condition, linetype=as.factor(signal)))+geom_point()
# data.nyes <- data.nyes[with(data.nyes, order(condition,signal, interval)),]
data.nyes$c1 <- ifelse(data.nyes$condition=="condition1", 1, 0)
data.nyes$c2 <- ifelse(data.nyes$condition=="condition2", 1, 0)
data.nyes$c3 <- ifelse(data.nyes$condition=="condition3", 1, 0)
data = subset(data, condition%in%c("condition1","condition2"))
library(satf)
source("~/CodeSATF/test/satf_load.R")
time = seq(-.2,4.6,.4); rho = .85;
data1 <- satf_generate(criterion=fn.bias, dprime=fn.satf1, time=time, n=sim.n, rho=rho, label="condition1")
data2 <- satf_generate(criterion=fn.bias, dprime=fn.satf2, time=time, n=sim.n, rho=rho, label="condition2")
data3 <- satf_generate(criterion=fn.bias, dprime=fn.satf2, time=time, n=sim.n, rho=rho, label="condition3")
data <- rbind(data1, data2, data3)
data$c1 <- ifelse(data$condition=="condition1", 1, 0)
data$c2 <- ifelse(data$condition=="condition2", 1, 0)
data$c3 <- ifelse(data$condition=="condition3", 1, 0)
data.nyes <- satf_aggregate_nyes(data, id=c('condition','interval'), time.id=c('interval'), signal='signal')
data.dprime <- satf_aggregate_dprime(data.nyes, id=c('condition', 'interval'), signal='signal',
dv=c('n.responses.yes', 'n.responses'))
data.nyes$c1 <- ifelse(data.nyes$condition=="condition1", 1, 0)
data.nyes$c2 <- ifelse(data.nyes$condition=="condition2", 1, 0)
data.nyes$c3 <- ifelse(data.nyes$condition=="condition3", 1, 0)
data = subset(data, condition%in%c("condition1","condition2"))
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=TRUE))
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE))
source('~/CodeSATF/R/satf.R')
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE))
source('~/CodeSATF/R/satf.R')
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE))
source('~/CodeSATF/R/satf.R')
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE))
source('~/CodeSATF/R/satf.R')
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE))
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, optimize.incrementally=FALSE))
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, optimize.incrementally=FALSE, reoptimize.times=5))
x = nloptr(c(1,1), function(x) {print(x); sum(x^2) }, opts=list(algorithm="NLOPT_LN_SBPLX", maxeval=10^6))
names(x)
x$solution
x = nloptr(c(a=1,b=1), function(x) {print(x); sum(x^2) }, opts=list(algorithm="NLOPT_LN_SBPLX", maxeval=10^6))
x$solution
source('~/CodeSATF/R/satf.R')
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, optimize.incrementally=FALSE, reoptimize.times=5))
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, optimize.incrementally=TRUE, reoptimize.times=1))
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=TRUE, reoptimize.times=1))
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE, reoptimize.times=1))
names(x)
x$message
x$status
summary(x)
source('~/CodeSATF/R/satf.R')
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE, reoptimize.times=1))
names(x)
source('~/CodeSATF/R/satf.R')
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE, reoptimize.times=1))
source('~/CodeSATF/R/satf.R')
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE, reoptimize.times=1))
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="SUBPLEX", optimize.incrementally=FALSE, reoptimize.times=2))
system.time({
(m.raw <- satf(dv=c(response=~response), signal=~signal,
start = c(asymptote=2, invrate=1, intercept=.4, bias.max=1, bias.invrate=1, bias.intercept=-1, bias.min=0),
contrasts = c(asymptote=~1+c2, invrate=~1+c2, intercept=~1+c2),
bias = ~1+c2, constraints=list(), time=~time, trial.id=~trial.id,
data=data, metric="logLikRaw", debug=T, method="Nelder-Mead", optimize.incrementally=FALSE, reoptimize.times=5))
})
source('~/CodeSATF/R/satf.R')
source('~/CodeSATF/R/satf.R')
library(satf)
library(nloptr)
fn.bias <- function(t) t*0 # SATF(t, asymptote=1, invrate=1, intercept=.4)
fn.satf1 <- function(t) SATF(t, asymptote=3, invrate=1, intercept=.4)
fn.satf2 <- function(t) SATF(t, asymptote=1, invrate=.5, intercept=.4)
sim.n <- 100
time = seq(-.2,4.6,.4); rho = .85;
data1 <- satf_generate(criterion=fn.bias, dprime=fn.satf1, time=time, n=sim.n, rho=rho, label="condition1")
head(data1)
source('~/CodeSATF/test/test.R')
